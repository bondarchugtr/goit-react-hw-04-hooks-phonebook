{"version":3,"sources":["Components/PhoneContacts/PhoneBook.module.css","Components/Filter/Filter.module.css","Components/Forma/InputPhonebook.module.css","Components/PhoneContacts/PhoneContacts.js","Components/Forma/FormPhonebook.js","Components/Filter/Filter.js","Components/PhoneBook/PhoneBook.js","App.js","index.js","Components/PhoneBook/PhoneBook.module.css"],"names":["module","exports","ContactsList","contacts","delContact","className","s","Contact__list","map","el","Contact__item","name","number","type","onClick","id","Button__remove","Form","state","handleInputChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","onContactsItem","reset","this","Forma","nameinput","Forma__input","nanoid","placeholder","pattern","title","required","onChange","Button__form","Component","Filter","filterContact","Filter__search","Filter__input","PhoneBook","filter","componentDidMount","contact","localStorage","getItem","localStorageLoading","JSON","parse","data","availabilityContact","alert","prevState","find","contactId","window","removeItem","e","prevProps","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","PhoneBookBlock","Contacts__title","length","Filter__text","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e7eac7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact__list\":\"PhoneBook_Contact__list__39gFN\",\"Contact__item\":\"PhoneBook_Contact__item__3HOKz\",\"Button__remove\":\"PhoneBook_Button__remove__J888H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__search\":\"Filter_Filter__search__26RSF\",\"Filter__input\":\"Filter_Filter__input__3v6lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forma\":\"InputPhonebook_Forma__3orIP\",\"Forma__input\":\"InputPhonebook_Forma__input__1es7_\",\"nameinput\":\"InputPhonebook_nameinput__3g3SN\",\"Button__form\":\"InputPhonebook_Button__form__3p6Qc\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './PhoneBook.module.css';\nconst ContactsList = ({ contacts = [], delContact }) => {\n  return (\n    <ul className={s.Contact__list}>\n      {contacts.map(el => (\n        <li key={el.id} className={s.Contact__item}>\n          <span>\n            {el.name} : {el.number}\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => delContact(el.id)}\n            className={s.Button__remove}\n          >\n            Remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport s from \"./InputPhonebook.module.css\";\nimport { nanoid } from \"nanoid\";\nimport Contacts from \"../PhoneContacts/PhoneContacts\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.onContactsItem();\n    this.reset();\n  };\n\n  onContactsItem = () => {\n    this.setState({\n      contacts: [this.state.name, this.state.number],\n    });\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={s.Forma}>\n          <label className={s.nameinput} />\n          Name\n          <input\n            className={s.Forma__input}\n            id={nanoid()}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Ivan Petrov\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={this.handleInputChange}\n          />\n          <label className={s.nameinput} />\n          Number\n          <input\n            className={s.Forma__input}\n            id={nanoid()}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            placeholder=\"+380990000000\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleInputChange}\n          />\n          <button type=\"submit\" className={s.Button__form}>\n            Add Contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport s from './Filter.module.css';\nconst Filter = ({ filterContact, value }) => {\n  return (\n    <div>\n      <form className={s.Filter__search}>\n        <label>Search</label>\n        <input\n          className={s.Filter__input}\n          value={value}\n          onChange={filterContact}\n          placeholder=\"Enter your name\"\n        ></input>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\n// import s from '../InputPhoneBook/InputPhonebook.module.css';\nimport Form from \"../Forma/FormPhonebook\";\nimport ContactsList from \"../PhoneContacts/PhoneContacts\";\nimport Filter from \"../Filter/Filter\";\nimport s from \"./PhoneBook.module.css\";\nimport { nanoid } from \"nanoid\";\n\nclass PhoneBook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount = () => {\n    const contact = localStorage.getItem(\"contacts\");\n    const localStorageLoading = JSON.parse(contact);\n    if (localStorageLoading) {\n      this.setState({ contacts: localStorageLoading });\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps) {\n      window.localStorage.setItem(\n        \"contacts\",\n        JSON.stringify(this.state.contacts)\n      );\n    }\n  }\n\n  onSubmit = (data) => {\n    const contact = {\n      id: nanoid(),\n      name: data.name,\n      number: data.number,\n    };\n    if (this.availabilityContact(contact.name)) {\n      return alert(`Name ${contact.name}already on your list\n      `);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { ...contact }],\n      }));\n    }\n  };\n\n  availabilityContact = (value) => {\n    return this.state.contacts.find((el) => el.name === value);\n  };\n\n  delContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n    window.localStorage.removeItem(\"contacts\");\n  };\n  filterContact = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return (\n      <>\n        <div className={s.PhoneBookBlock}>\n          <Form onSubmit={this.onSubmit} />\n        </div>\n        <div>\n          <div>\n            <h2 className={s.Contacts__title}>Contacts</h2>\n            {contacts.length > 0 ? (\n              <Filter filterContact={this.filterContact} value={filter} />\n            ) : (\n              <p className={s.Filter__text}>No contacts🙁</p>\n            )}\n          </div>\n          <ContactsList\n            contacts={visibleContacts}\n            delContact={this.delContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\nexport default PhoneBook;\n","import PhoneBook from './Components/PhoneBook/PhoneBook';\nimport s from './Components/PhoneBook/PhoneBook.module.css';\nfunction App() {\n  return (\n    <div className={s.Container}>\n      <PhoneBook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PhoneBook_Container__2wQ_Z\",\"Contacts__title\":\"PhoneBook_Contacts__title__1uPsK\",\"Filter__text\":\"PhoneBook_Filter__text__3_4v4\"};"],"sourceRoot":""}